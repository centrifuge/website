name: Functions
on:
# Check job conditions if you add any triggers here
  pull_request:
    paths: 
      - 'functions/*'
      - '.github/workflows/functions-deploy.yml'
  push:
    branches:
      - "main"
    paths:
      - 'functions/*'
      - '.github/workflows/functions-deploy.yml'    

  workflow_call:
    inputs:
      deploy_prod:
        description: "Deploy to prod: requires approval and wait time"
        default: false
        type: boolean
  
  workflow_run:
    workflows: [Deploy website]
    types:
      - "requested"
    branches-ignore:
    # Only run this with website-deploy if it's not the main branch
      - "main"
      # workflow_run will always use the default branch (main) as git.ref
      # always deploying code from main unless the functions/ dir has changed
      # which will trigger this workflow differently
      # Change git.ref to github.event.workflow_run.head_branch if a different behavior is desired
      # and add an SHA to the commit in the build
      # https://github.com/orgs/community/discussions/27124
concurrency:
  group: func-${{ github.event.workflow_run.head_branch || github.ref }}
  cancel-in-progress: true

jobs:
  check_exists:
    secrets: inherit
    uses: ./.github/workflows/check-function.yml
    with:
      retry: false
      # production: ${{ inputs.deploy_prod }} || false

  build-functions:
    needs: check_exists
    # When should functions be deployed?
    # 1. If it's not a workflow_run => Either main branch or prod deploy 
    # 2. If it's a workflow_run (from web-deploy) and the function does not exist
    # Add more conditions if you add any more triggers
    if: |
      github.event_name != 'workflow_run'||
      ( needs.check_exists.outputs.function_URL == '' && github.event_name == 'workflow_run' )

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 #@v3.1.0
      - name: Set .env for functions
        run: echo "CENTRIFUGE_SUBGRAPH_URL=https://graph.centrifuge.io/tinlake" > functions/.env
      - name: print .env
        run: cat functions/.env
      - name: Setup Node
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 #@v3
        with:
          node-version: 18
          cache: yarn
      - name: Install Dependencies
        run: yarn install
      - name: Build
        run: yarn build:functions
      - name: Archive functions artifacts
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # @v3.1.2
        with:
          name: func-dist
          retention-days: 1
          path: functions/dist
          # !dist/**/*.md

  deploy-functions: 
    needs: build-functions
    outputs:
      function_url: ${{ steps.gclouddeploy.outputs.url }}   
    permissions:
      contents: 'read'
      id-token: 'write'  
    runs-on: ubuntu-latest
    # Deployment strategy:
    # prod if deploying from main branch or preview from PRs
    environment: ${{ inputs.deploy_prod && 'production' || 'gcloud-dev' }}
    # https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment
    steps:
      - name: Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 #@v3.1.0    
      - name: Set deployment vars
        uses: ./.github/actions/deploy_strategy
        id: deploy_vars
        with: 
          deploy_prod: ${{ inputs.deploy_prod }}   

      - name: download the distribution package
        id: download
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # @v3.0.2
        with:
          name: func-dist

      - name: Auth gcloud
        id: gauth
        uses: google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d # @v1
        with:
          workload_identity_provider: '${{ secrets.GWIP }}'
          service_account: '${{ secrets.GSA }}'
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@d51b5346f85640ec2aa2fa057354d2b82c2fcbce # v1.0.1   
    
      - name: Deploy to google functions
        id: gclouddeploy
        uses: google-github-actions/deploy-cloud-functions@14509ca55199d9348161571e36c48e44f855030d #@v1
        with:
          name: ${{ steps.deploy_vars.outputs.function_name }}
          runtime: nodejs16
          region: ${{ vars.GCP_REGION }}
          source_dir: ${{steps.download.outputs.download-path}}
          entry_point: 'handler'
          https_trigger_security_level: 'secure_always'
          max_instances: ${{ inputs.deploy_prod && '25' || '1' }}


      - name: Change function to allow_unathorized calls 
        shell: bash
        run: |
          gcloud functions add-iam-policy-binding ${{ steps.deploy_vars.outputs.function_name }} \
          --region=${{ vars.GCP_REGION }} \
          --member="allUsers" --role="roles/cloudfunctions.invoker"

