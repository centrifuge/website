
# If you change this file make sure to change the references to filename and outputs from
# functions and website workflows

name: Find Gcloud Function
on:
  workflow_call:
    inputs:
      retry:
        type: boolean
        default: false
        description: "To keep searching for the function"
      production:
        type: boolean
        default: false
    outputs:
      function_URL: 
        value: ${{ jobs.check_function_url.outputs.function_url}}
        description: "function URL (if found) or empty otherwise"

jobs:
  check_function_url:
    outputs:
      function_URL: ${{ steps.find_function.outputs.function_url }}  
    permissions:
      contents: read
      id-token: write 
    runs-on: ubuntu-latest
    environment: ${{ inputs.production && 'production' || '' }} # Use default read-only secrets if not prod
    steps:   
      - name: Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 #@v3.1.0
      - name: Set deployment vars
        uses: ./.github/actions/deploy_strategy
        id: deploy_vars
        with: 
          deploy_prod: ${{ inputs.production }}

      - name: Auth gcloud
        id: gauth
        uses: google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d # @v1
        with:
          workload_identity_provider: '${{ secrets.GWIP }}'
          service_account: '${{ secrets.GSA }}'

      # Install gcloud, `setup-gcloud` automatically picks up authentication from `auth`.
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@d51b5346f85640ec2aa2fa057354d2b82c2fcbce # v1.0.1

      - name: Discover function URL for website
        if: inputs.retry
        shell: bash
        # max_retry and sleep will consume GHA minutes. It shuold only fail when a PR is still to be deployed though
        # Initial value: 6 * 60(sleep)
        run: |
          echo "Called from website job, keep searching for function"
          max_retry=7
          counter=0
          while ! gcloud functions describe --region ${{ vars.GCP_REGION }} ${{ steps.deploy_vars.outputs.function_name }} &> /dev/null && 
                  [ ${counter} -lt ${max_retry} ]
          do
            echo " Function not found - Try #${counter}"
            echo "Wait 1 min..."
            # Try once every minute
            sleep 60
            echo "Trying again:"
            counter=$((counter+1))
            
          done
          if ! gcloud functions describe --region ${{ vars.GCP_REGION }} ${{ steps.deploy_vars.outputs.function_name }} 1> /dev/null; then
            echo "::error title=Not_found::Function ${{ steps.deploy_vars.outputs.function_name }} not found, check functions deploy and re-run this job"
            exit 1
          fi


      - name: Fetch function URL
        id: find_function
        shell: bash
        run: |
         echo "Called from function job, return result immediately"
          if gcloud functions describe --region ${{ vars.GCP_REGION }} ${{ steps.deploy_vars.outputs.function_name }} &> /dev/null; then
            echo "function_url=$(gcloud functions describe --region ${{ vars.GCP_REGION }} ${{ steps.deploy_vars.outputs.function_name }} --format='value(httpsTrigger.url)')" >> $GITHUB_OUTPUT
          else
            echo "function_url=''" >> $GITHUB_OUTPUT
          fi

 